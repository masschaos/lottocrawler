name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - prod

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: crawler

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "prod" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

          # Sleep before deploy
          sleep 10

      # Slack 通知
      - name: Slack Success Notification
        if: success()
        uses: rtCamp/action-slack-notify@master
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_TITLE: 镜像构建成功
          SLACK_ICON_EMOJI: robot_face
          SLACK_USERNAME: Lotto Config Bot
          SLACK_CHANNEL: dev

      - name: Slack Failure Notification
        if: failure()
        uses: rtCamp/action-slack-notify@master
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_TITLE: 镜像构建失败
          SLACK_ICON_EMOJI: robot_face
          SLACK_USERNAME: Lotto Config Bot
          SLACK_COLOR: "#ff5f52"
          SLACK_CHANNEL: dev

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: deploy weu & cac
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_WEU_HOST }}
          port: 22
          username: ec2-user
          key: ${{ secrets.EC2_WEU_KEY }}
          script: nohup bash -c "sh deploy.sh 2>&1 &" && sleep 2
      - name: deploy sea
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_SEA_HOST }}
          port: 22
          username: ec2-user
          key: ${{ secrets.EC2_SEA_KEY }}
          script: nohup bash -c "sh deploy.sh 2>&1 &" && sleep 2

      # Slack 通知
      - name: Slack Success Notification
        if: success()
        uses: rtCamp/action-slack-notify@master
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_TITLE: 爬虫重启命令已发送
          SLACK_ICON_EMOJI: robot_face
          SLACK_USERNAME: Lotto Config Bot
          SLACK_CHANNEL: dev

      - name: Slack Failure Notification
        if: failure()
        uses: rtCamp/action-slack-notify@master
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_TITLE: 爬虫重启命令发送失败
          SLACK_ICON_EMOJI: robot_face
          SLACK_USERNAME: Lotto Config Bot
          SLACK_COLOR: "#ff5f52"
          SLACK_CHANNEL: dev
